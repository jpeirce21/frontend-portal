import selenium
import os
import time
from selenium import webdriver
import sys
from PIL import Image

CONTENT_TAGS = ["p", "h1", "h2", "h3", "h4", "h5", "h6", "nav", "img", "a",
                "iframe", "ul", "ol", "li", "table", "button"]

def main():
    if len(sys.argv) < 2:
        raise Exception("Usage: python display_test_generator.py <correct_site>")
    elif len(sys.argv) == 2:
        outfile = "display_match_" + sys.argv[1] + ".js"
    else:
        outfile = sys.argv[2]
    site = sys.argv[1]
    path_to_here = os.path.abspath(".")
    browser = webdriver.Chrome(os.path.join(path_to_here, "chromedriver"))
    browser.get(site)
    time.sleep(1)
    styles = {t : [] for t in CONTENT_TAGS}
    for tag in CONTENT_TAGS:
        for e in browser.find_elements_by_tag_name(tag):
            styles[tag].append({s : e.value_of_css_property(s)
                for s in e.get_property('style')})

    #Convert colors from RGBA to RGB
    for tag in styles:
        for elem in styles[tag]:
            if "color" in elem:
                color = elem["color"]
                im = Image.new("RGBA", (1, 1),
                    tuple(int(i) for i in color[5:-1].split(", ")))
                elem["color"] = "rgb" + str(im.convert('RGB').getpixel((0, 0)))

    outstr  = "//Test automatically generated by display_test_generator.py\n"
    outstr += 'let URL = ""; //PUT_URL_OF_TEST_SITE_HERE \n'
    outstr += f'describe("Ensures content matches page at {sys.argv[1]}", () => '
    outstr += '{ \n\tit("Ensures contents and styles match", () => {'
    outstr += "\n\t\tcy.visit(URL);"
    outstr += "\n\t\tcy.wait(5000)"
    for tag in CONTENT_TAGS:
        for i in range(len(styles[tag])):
            outstr += ';\n\t}),\n\tit("Ensures the ' + str(i + 1) + 'th ' + tag + ' tag matches.", () => {'
            outstr += "\n\t\tCypress.config('defaultCommandTimeout', 1);"
            outstr += "\n\t\tcy.get('" + tag + "').eq(" + str(i) + ")"
            for s in styles[tag][i]:
                outstr += f"\n\t\t\t.should('have.css', '{s}', '{styles[tag][i][s]}')"
    outstr += ";\n\t})\n})"

    with open(outfile, "a") as f:
        f.write(outstr)


if __name__ == "__main__":
    main()
